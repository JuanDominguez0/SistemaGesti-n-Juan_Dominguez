@inject NavigationManager Navigation
@inject VentasService dataAccess

<EditForm Model="venta" OnValidSubmit="@CrearOActualizarVenta" FormName="ventas-form">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-control">
        <div class="mb-3">
            <label for="comentario" class="form-label">Comentario</label>
            <InputText type="text" id="comentario" @bind-Value="venta.Comentario" class="form-control" />
            <ValidationMessage For="(() => venta.Comentario)" />
        </div>
        <div class="mb-3">
            <label for="idUsuario" class="form-label">Id usuario</label>
            <InputNumber type="number" id="idUsuario" @bind-Value="venta.IdUsuario" class="form-control" />
            <ValidationMessage For="(() => venta.IdUsuario)" />
        </div>
        <button type="submit" class="btn btn-success">Guardar</button>
    </div>
</EditForm>


@code {
    [Parameter]
    public Venta? venta { get; set; }


    public async Task CrearOActualizarVenta()
    {
        if (venta.Id > 0)
        {
            await dataAccess.ModificarVenta(venta.Id, venta);
        }
        else
        {
            await dataAccess.CrearVenta(venta);
        }
        Navigation.NavigateTo("/ventas");
    }
}
